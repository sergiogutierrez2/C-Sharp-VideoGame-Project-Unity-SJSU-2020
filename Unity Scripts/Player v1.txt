using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Player : MonoBehaviour
{
    public Rigidbody2D rb;
    public new Animator animation;
    public float speed = 5f;
    public float jumpForce = 1000f;
    [SerializeField] private bool isGrounded;

    //Combat Variables:
    public int health = 30;
    public float invincibleTimeAfterHurt = 2;
    
    // Start is called before the first frame update
    void Start()
    {
        rb = GetComponent<Rigidbody2D>();
        animation = GetComponent<Animator>();
    }

    // Update is called once per frame
    void Update()
    {
        int layerMask = LayerMask.GetMask("Ground");
        if (Physics2D.Raycast(transform.position, new Vector2(0, -1), 3.5f, layerMask))
        {
            isGrounded = true;
        }
        else
        {
            isGrounded = false;
        }
        
        
        if(isGrounded && Input.GetButtonDown("Jump"))
        {
            rb.AddForce(new Vector2(0, jumpForce));
        }

        float hDir = Input.GetAxisRaw("Horizontal");
        Vector2 hMove = new Vector2(hDir * speed, rb.velocity.y);

        if(rb.velocity.x < 0)
        {
            transform.localScale = new Vector3(-1, 1, 1);
        }
        else if(rb.velocity.x > 0)
        {
            transform.localScale = new Vector3(1, 1, 1);
        }

        if(hDir != 0)
        {
            animation.SetBool("isMoving", true);
        }
        else
            animation.SetBool("isMoving", false);

        rb.velocity = hMove;
    }

    [System.Obsolete]
    void Hurt()
    {
        health--;
        Application.LoadLevel(Application.loadedLevel);

    }

    void OnCollisionEnter2D(Collision2D collision)
    {
        PatrolBehavior enemy = collision.collider.GetComponent<PatrolBehavior>();
        if (enemy != null)
        {
              Hurt();
        }

        Enemy enem = collision.collider.GetComponent<Enemy>();
        if (enem != null)
        {
            Hurt();
        }
    }
}
